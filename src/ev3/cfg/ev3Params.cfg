#! /usr/bin/env python

PACKAGE='ev3'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


driveGroup = gen.add_group("Drive")
hubGroup = gen.add_group("Sensor hub")
imuGroup = gen.add_group("IMU")
pidGroup = gen.add_group("PIDs")

#       Name        Type      Level	 Description				      Default	Min			Max


hubGroup.add("EdgeThreshold", double_t, 1,  "Edge if reading below",	 125, 0,	9999)
hubGroup.add("ObstacleThreshold", double_t, 1,  "Obstacle if reading above",	 500, 0,	9999)

hubGroup.add("hubTimeout", int_t, 1,  "Hub reading timeout (ms)",	 10, 1,	9999)
hubGroup.add("hubRetryCount", int_t, 1,  "IMU retry count", 3, 0,	99)


imuGroup.add("imuRegCount", int_t, 4,  "Number of registers to read",	 6, 1,	17)
imuGroup.add("imuTimeout", int_t, 4,  "IMU reading timeout (ms)",	 10, 1,	9999)
imuGroup.add("imuRetryCount", int_t, 4,  "IMU retry count", 3, 0,	99)

driveGroup.add("driveCtrlRate", int_t, 2,  "Drive control rate (Hz)",	 15, 1,	100)

driveGroup.add("GearRatio",  double_t, 2,  "Gear Ratio",      -1,   -9999,  9999)
driveGroup.add("WheelDiam",	double_t, 2,	"Wheel diameter (m)",      0.0385022,	0,		9999)
driveGroup.add("TrackWidth", double_t, 2,	"Track width (m)",          0.18,	  0,	9999)

driveGroup.add("LinAccel",   double_t, 2,	"Linear acceleration (m/s^2)",  	0.8,	  0,	9999)
driveGroup.add("RotAccel",   double_t, 2,	"Rotational acceleration (rad/s^2)",  	6,	  0,	9999)
driveGroup.add("MaxOutRatio", double_t,  2,	"Ratio of max motor output to use ", 0.9, 0.0, 1.0)

pidGroup.add("VelKp", int_t,  8, "Linear Velocity Kp", 2000,	  0,  80000)
pidGroup.add("VelKi", int_t,  8,	"Linear Velocity Ki", 30,	    0,  80000)
pidGroup.add("VelKd", int_t,  8,	"Linear Velocity Kd", 0,	    0,  80000)
pidGroup.add("HoldKp", int_t,  8, "Hold Kp", 80000,	0,  80000)
pidGroup.add("HoldKi", int_t,  8,	"Hold Ki", 0,	    0,  80000)
pidGroup.add("HoldKd", int_t,  8,	"Hold Kd", 0,	    0,  80000)
pidGroup.add("RotKp", double_t,  8,	"Rotational Kp", 0.4,    -1000,  1000)
pidGroup.add("RotKi", double_t,  8,	"Rotational Ki", 6.0,    -1000,  1000)
pidGroup.add("RotKd", double_t,  8,	"Rotational Kd", 0.005,    -1000,  1000)

exit(gen.generate(PACKAGE, "ev3_reconfig_node", "ev3Params"))

